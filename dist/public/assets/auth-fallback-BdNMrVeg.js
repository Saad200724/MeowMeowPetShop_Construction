const c="meow_users";function i(){try{const s=localStorage.getItem(c);return s?JSON.parse(s):[]}catch{return[]}}function g(s){localStorage.setItem(c,JSON.stringify(s))}async function S(s,o,r,t){const e=i();if(e.find(u=>u.email===s))return{data:null,error:{message:"User already exists with this email"}};const n={id:Date.now().toString(),email:s,firstName:r,lastName:t,name:r&&t?`${r} ${t}`:r||t||"",role:"user"},l=JSON.parse(localStorage.getItem("meow_passwords")||"{}");return l[s]=o,localStorage.setItem("meow_passwords",JSON.stringify(l)),e.push(n),g(e),localStorage.setItem("auth_user",JSON.stringify(n)),{data:{user:n},error:null}}async function d(s,o){const r=i(),t=JSON.parse(localStorage.getItem("meow_passwords")||"{}"),e=r.find(a=>a.email===s);return!e||t[s]!==o?{data:null,error:{message:"Invalid email or password"}}:(localStorage.setItem("auth_user",JSON.stringify(e)),{data:{user:e},error:null})}export{d as fallbackSignIn,S as fallbackSignUp};
